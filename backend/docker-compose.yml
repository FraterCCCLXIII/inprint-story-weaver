
services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: podbook_postgres
    environment:
      - POSTGRES_DB=podbook
      - POSTGRES_USER=podbook_user
      - POSTGRES_PASSWORD=podbook_password
      - POSTGRES_INITDB_ARGS="--encoding=UTF-8"
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./prisma/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - podbook_network
    restart: unless-stopped

  # Redis for caching and queues
  redis:
    image: redis:7-alpine
    container_name: podbook_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - podbook_network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: podbook_pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@podbook.com
      - PGADMIN_DEFAULT_PASSWORD=admin123
      - PGADMIN_CONFIG_SERVER_MODE=False
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - podbook_network
    depends_on:
      - postgres
    restart: unless-stopped

  # Backend API (will be built from Dockerfile)
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: podbook_backend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - PORT=3000
      - PRISMA_QUERY_ENGINE_BINARY
      - LD_LIBRARY_PATH
    volumes:
      - .:/app
      - /app/node_modules
      - ./uploads:/app/uploads
    networks:
      - podbook_network
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    command: npm run dev

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  podbook_network:
    driver: bridge
